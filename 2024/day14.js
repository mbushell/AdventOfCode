const file = require("path").basename(__filename);

// Star 1: 229839456
// Star 2: 7138

/*
solve(`p=0,4 v=3,-3
p=6,3 v=-1,-3
p=10,3 v=-1,2
p=2,0 v=2,-1
p=0,0 v=1,3
p=3,0 v=-2,-2
p=7,6 v=-1,-3
p=3,0 v=-1,-2
p=9,3 v=2,3
p=7,3 v=-1,2
p=2,4 v=2,-3
p=9,5 v=-3,-3`, 11, 7);
*/

require('node:fs').readFile(file.replace(".js", ".txt"),
  'utf8', (err, data) => solve(data, 101, 103)
);


async function solve(data, w, h)
{
  let robots = data.split("\n").map(r =>
    r.split(" ").map(
      d => d.split("=")[1].split(",").map(n => parseInt(n))
    )
  );


  let grid = Array(h);
  for (let i = 0; true; i++) {
    robots.forEach(robot => {
      robot[0][0] = (robot[0][0] + robot[1][0] + w) % w;
      robot[0][1] = (robot[0][1] + robot[1][1] + h) % h;
    });

    let check = false;
    let width = [];
    for(let j = 0; j < h; j++) {
      grid[j] = Array(w).fill('.');
      width[j] = 1;
    }
  
    robots.forEach(robot => {
      let [x, y] = robot[0];
      if (grid[y][x] == '.') {
        grid[y][x] = 1;
        width[y]++;
      } else {
        grid[y][x]++;
      }
      if (width[y] > 34) {
        check = true;
      }
    });
  
    console.log(i+1);
    if (check) {
      console.log(grid.map(r => r.join("")).join("\n"));
      break;
    }

    /*await sleep(200)
    function sleep(ms) {
      return new Promise((resolve) => {
        setTimeout(resolve, ms);
      });
    }*/
  }
  
    



  // Part 1:
  /*
  let seconds = 100;
  for (let i = 0; i < seconds; i++) {
    robots.forEach(robot => {
      robot[0][0] = (robot[0][0] + robot[1][0] + w) % w;
      robot[0][1] = (robot[0][1] + robot[1][1] + h) % h;
    });
  }
  
    
  let grid = Array(h);
  for(let j = 0; j < h; j++) {
    grid[j] = Array(w).fill('.');
  }

  robots.forEach(robot => {
    let [x, y] = robot[0];
    if (grid[y][x] == '.') {
      grid[y][x] = 1;
    } else {
      grid[y][x]++;
    }
  });

  let q1 = 0, q2 = 0, q3 = 0, q4 = 0;

  const hmid = (h-1)/2;
  const wmid = (w-1)/2;
  for (let j = 0; j < h; j++) {
    for (let i = 0; i < w; i++) {
      if (grid[j][i] == '.') continue;
      if (j == hmid || i == wmid) continue;
      if (j < hmid) {
        if (i < wmid) {
          q1 += grid[j][i];
        } else {
          q2 += grid[j][i];
        }
      } else {
        if (i < wmid) {
          q3 += grid[j][i];
        } else {
          q4 += grid[j][i];
        }
      }
    }
  }

  console.log(q1*q2*q3*q4);
  */
}

/*
.........................1..1111111111111111111111111111111...............1...............1..........
............................1.............................1...1......................................
............................1.............................1..........................................
............................1.............................1.......1.............1....................
......................1.....1.............................1.....................1....................
............................1..............1..............1......1....................1..............
............................1.............111.............1..........................................
.1..........................1............11111............1..............................1...........
............................1...........1111111...........1...............1..........................
............................1..........111111111..........1..........................................
............................1............11111............1...................................1......
............................1...........1111111...........1..........................................
.............1..............1..........111111111..........1..........................................
............................1.........11111111111.........1...1......................................
............................1........1111111111111........1.........................................1
............................1..........111111111..........1..........................................
............................1.........11111111111.........1.1........................................
............................1........1111111111111........1.........................1................
............................1.......111111111111111.......1..........................................
.....................1......1......11111111111111111......1..........................................
............................1........1111111111111........1..........................................
............................1.......111111111111111.......1......1...................................
........................1...1......11111111111111111......1............................1.............
......1.........1...........1.....1111111111111111111.....1..........1...............1...............
............................1....111111111111111111111....1..........................................
............................1.............111.............1..........................................
............................1.............111.............1...................................1......
............................1.............111.............1....................................1....1
............................1.............................1......................1...................
.1..........................1.............................1..1.......................................
............................1.............................1..........................................
........1...................1.............................1.......1..................................
............................1111111111111111111111111111111..................1....1..................
*/